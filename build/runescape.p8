pico-8 cartridge // http://www.pico-8.com
version 29
__lua__
--src/main.lua
-- sword 

function _init()
    -- global vars
    t=0
    cam = {
        x = 0,
        y = 0
    }
    msg=''
    -- states: move, menu, talk, etc.
    -- game states change control delegates

    game_state = 'move'

    -- thanks doc_robs!
    dust={}

    char=init_char()
end

function _update()
    pal()
    t=(t+1)%128

    if (game_state == 'move') then
        char:update()
    end

    if (game_state == 'menu') then
        menu:update()
    end

    cam.x = char.x - 64
    cam.y = char.y - 64

    for d in all(dust) do
        d:update()
    end
end

function _draw()
    cls()

    map(0,0,0,0,128,64)

    camera(cam.x, cam.y)
    char:draw()

    if (game_state == 'menu') then
        menu:draw()
    end

    for d in all(dust) do
        d:draw()
    end

    -- debug()
end
-->8
--src/menu.lua
menu = {
    cursor = {
        x=1,
        y=1
    },

    update = function(self)

        if (btnp(0)) then
            self.cursor.x = max(self.cursor.x - 1, 1)
        end

        if (btnp(1)) then
            self.cursor.x = min(self.cursor.x + 1, 4)
        end

        if (btnp(2)) then
            self.cursor.y = max(self.cursor.y - 1, 1)
        end

        if (btnp(3)) then
            self.cursor.y = min(self.cursor.y + 1, 9)
        end 


        if (btnp(4)) then
            game_state = 'move'
        end
    end,

    draw = function(self)
        -- status
        draw_menu_rect(0,0,63,63,7)
        print('- status - ', cam.x + 12, cam.y + 2, 7)


        -- inventory
        draw_menu_rect(96, 32, 127, 111, 7)

        print('-items-', cam.x + 98, cam.y + 34, 7)

        -- cursor
        draw_menu_rect(
            ((self.cursor.x - 1) * 8) + 96,
            ((self.cursor.y - 1) * 8) + 40,
            ((self.cursor.x) * 8) + 96 - 1,
            ((self.cursor.y) * 8) + 40 - 1,
            8
        )

        -- bottom bar
        draw_menu_rect(16, 120, 111, 127, 7)

    end
}

function draw_menu_rect(x0, y0, x1, y1, color)
    rectfill(cam.x + x0, cam.y + y0, cam.x + x1, cam.y + y1, 0)
    line(cam.x + x0 + 1, cam.y + y0, cam.x + x1 - 1, cam.y + y0, color)
    line(cam.x + x0, cam.y + y0 + 1, cam.x + x0, cam.y + y1 - 1, color)
    line(cam.x + x0 + 1, cam.y + y1, cam.x + x1 - 1, cam.y + y1, color)
    line(cam.x + x1, cam.y + y0 + 1, cam.x + x1, cam.y + y1 - 1, color)
end
-->8
--src/lib/group.lua
function new_group(bp)
    return {
        _={},
        bp=bp,
        
        new=function(self,p)
            for k,v in pairs(bp) do
                if v!=nil then
                    p[k]=v
                end
            end
            p.alive=true
            add(self._,p)
        end,
           
        update=function(self)
            for i,v in ipairs(self._) do
                v:update()
                if v.alive==false then
                del(self._,self._[i])
                end
            end
        end,

        turn=function(self)
            for v in all(self._) do
                v:turn()
            end
        end,
        
        draw=function(self)
            for v in all(self._) do
                spr(v.s,v.x*8,v.y*8,1,1,v.flip)
            end
        end
    }
end
-->8
--src/lib/dust.lua
function add_new_dust(_x,_y,_dx,_dy,_l,_s,_g,_f)
    add(dust, {
    fade=_f,x=_x,y=_y,dx=_dx,dy=_dy,life=_l,orig_life=_l,rad=_s,col=8,grav=_g,draw=function(self)
    pal()palt()circfill(self.x * 8,self.y * 8,self.rad,self.col)
    end,update=function(self)
    self.x+=self.dx self.y+=self.dy
    self.dy+=self.grav self.rad*=0.9 self.life-=1
    if type(self.fade)=="table"then self.col=self.fade[flr(#self.fade*(self.life/self.orig_life))+1]else self.col=self.fade end
    if self.life<0then del(dust,self)end end})
end
-->8
--src/lib/util.lua
function rndi(min,max)
    return flr(rnd(max - min)) + min
end

function coord_match(a,b)
    return a[1] == b[1] and a[2] == b[2]
end

function in_bounds(a,b)
    return a > 0 and a < MAP_SIZE + 1 and b > 0 and b < MAP_SIZE + 1
end

function round(x)
    if ((x - flr(x)) >= 0.5) then
        return ceil(x)
    else
        return flr(x)
    end
end
-->8
--src/log.lua
_log={}
log_l=4
for i=1,log_l do
    add(_log,'')
end

function log(str)
    add(_log,str)
end
   
function debug()
    vars = {
        't='..t
    }

    -- draw the log
    for i=count(_log)-log_l+1,count(_log) do
        add(vars,'> '.._log[i])
    end

    for i,v in ipairs(vars) do
        print(v,(cam.x*8)+8,(cam.y*8)+(i*8),15)
    end
end
-->8
--src/char.lua
function init_char()
    local char={
        x=72,
        y=192,
        dx=0,
        dy=0,
        runspeed=1,
        spr=004,
        spri=1,
        state='stand',
        flip=false,
        states={
            ['stand']={
                ['walk']=1,
            },
            ['walk']={
                ['stand']=1,
            }
        },
        animations={
            ['stand']={004},
            ['walk']={004,004,020,020},
        },
        change_state=change_state,
        get_input=get_input,
        update=update_char,
        menu=function(self)
            -- bring up pause / item menu
            game_state = 'menu'
        end,
        action=function(self)
            -- talk / read
            game_state = 'menu'
        end,

        draw=function(self)
            spr(self.spr,self.x,self.y,1,1,self.flip)
        end
    }
    return char
end

function change_state(_char, next_state)
    if (_char.states[_char.state][next_state] ~= nil) then
        _char.state = next_state
        _char.spri = 1
    end
end

function get_input(_char)
    if (btn(0) and not(btn(1)) and not(btn(2)) and not(btn(3))) then
        _char.dx = -char.runspeed
        _char:change_state('walk')
        _char.flip = true
    elseif (btn(1) and not(btn(0)) and not(btn(2)) and not(btn(3)) ) then
        _char.dx = char.runspeed
        _char:change_state('walk')
        _char.flip = false
    elseif (btn(2) and not(btn(1)) and not(btn(0)) and not(btn(3))) then
        _char.dy = -char.runspeed
        _char:change_state('walk')
    elseif (btn(3) and not(btn(1)) and not(btn(2)) and not(btn(0))) then
        _char.dy = char.runspeed
        _char:change_state('walk')
    end

    if (btn(0) == btn(1)) then
        _char.dx = 0 
    end

    if (btn(2) == btn(3)) then
        _char.dy = 0 
    end 

    if (_char.dx == 0 and _char.dy == 0) then
        _char:change_state('stand')
    end

    if (btnp(5)) then
        _char:menu()
    end

    if (btnp(4)) then
        _char:action()
    end
end

function update_char(_char)
    if (_char.pause) then
        return
    end

    _char:get_input()

    _char.y += _char.dy
    _char.x += _char.dx

    -- animation
    if (t % 4 == 0) then
        _char.spri = ((_char.spri + 1) % #_char.animations[_char.state]) + 1
    end

    _char.spr = _char.animations[_char.state][_char.spri]
end
-->8
__gfx__
00000000000330000000000000000900000000000000000008000080000000000000000000000000000000000000000005000050000000000000000000000000
000000000003300000000000000099900000900000000cc08000000800004000004400000005000000000aa07777700005000050050000500000000000000000
00700700003033000003300000009790000090000000c0c0808888080004400000440000000000500000aaaa7888870000555500050000500000000000000000
0007700000333300033333300000290000099900000cccc00808808000044400000004400500000000a0aaaa7887887005555550055555500000000000000000
000770000330333033003333000200000099099000cccc000888888000444400044404440005000000000aa00788787005055050050000500000000000000000
00700700030333303033333300200000099009900cccc000888888880044444004440444000005000aa000000788787005055050055555500000000000000000
0000000033000333333333300200000009900990ccc00000088888800444444004440000005000000aa00a000078887005000050055005500000000000000000
00000000303333333333300300000000009999000c00000080800808044444400000000000000000000000000007770000000000055555500000000000000000
000000003003333303333330000004400000900000eeee0000800800000000770477700000007000000040000666666006666660000000040000000000000000
00000000033333300000000000404444000999000eeeeee00808080800000777040007000047770000777770611111166cccccc6000000e40ddddd0000000000
0000000000000000000440000004044400090900eeeeeeee8088808000007770040000700004770007004007611111166cccccc60000044e006666d000000000
0000000000044000004440000040440400990990e0ee00ee088888080607770004000007000400000000400066666666666666660000540e0066600000000000
00000000000444000004400004444040009009900ee0e0ee008888800667700000400007000040000000400066666666666666660004400e0066600000000000
0000000000044000000440004004040009900990e0e000ee880888800066000000400070000040000000400006666660066666600054000e0006000000000000
000000000004400000044000400440000990999000000ee000808888060660000040670000000400000040000666666006666660454000000000600000000000
00000000000440000004400004440000009999000000ee0008080088600000000040000000000400000040000066660000666600040000000000000000000000
000000b00000003000bb3b00000000a000000a000000000000000444000000000000000000003000000000000000000000000000000000000000000000000000
00000b33000099300b3b33b000000a0000000af00000000000004f44000000000000000000000300000000000000000000000000000000000000000000000000
0000b33000099993b3b333b3000a0fa0000a0aaa00000000000444f4000bb0000000000000008880000000000800008000000000000000000000000000000000
000b330000999990b3b333b300aa0f00000aa00000000000004f444000b00b000000300000008880044444400008800000000000000000000000000000000000
00b3300000999900b3b333b300a04f000a04aa0000fffff00444f40000b00b000003000000088800493999940088880000000000000000000000000000000000
0bbb000009999000b3b333b304f04f040a4000000fffffff4f44400000b0bb000300300300888000449993440088880000000000000000000000000000000000
7bb00000999900000b3b33b004f04f0404aa00000fffffff44f4000000b000000030303008800000044444400008800000000000000000000000000000000000
770000009900000000bb3b0004f04f0440000000000000000440000000b000000033330000000000004444000000000000000000000000000000000000000000
00000001111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000015151515150000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00001555155551550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00011111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00155155551555150000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01555155551555150000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
004444444444444444444444444444445555555500ffff00cccccccc11111111333333336666666655555555ffffffff77777777222222220000000000000000
00447774447777444ffffff447777774566555550ffffff0cccccccc44144444333333336666666655555555ffffffff77777777200000020000000000000000
00447774474774744ffffff447aaaa7455555555ffffffffcccccccc44144144333333336666666655555555ffffffff77777777200000020000000000000000
00474747477447744ffffff447aaaa745555566500ffffffcccccccc44144144333333336666666655555555ffffffff77777777200000020000000000000000
00477477477447744ffff4f447aaaa7455555555fffffff0cccccccc44144144333333336666666655555555ffffffff77777777200000020000000000000000
00474747474774744ffffff447aaaa74566555550f00ffffcccccccc44144144333333336666666655555555ffffffff77777777200000020000000000000000
00447774447777444ffffff447777774555555550ffff0f0cccccccc44144144333333336666666655555555ffffffff77777777200000020000000000000000
004444444444444444444444444444445555556600ffff00cccccccc11111111333333336666666655555555ffffffff77777777222222220000000000000000
0bb00bb000000000000000000000000000eeee000070000700000000000000000000000000000000000000000000000000000000000000000000000000000000
0b1bb1b00000000000050555555555000eeeeee00070000700777700000000000000000000000000000000000000000000000000000000000000000000000000
0b1771b0000000000055555555555500ee77e77e0001711007717170000000000000000000000000000000000000000000000000000000000000000000000000
0bb11bb0000000000055555555555550ee71e17e0001711007717170000000000000000000000000000000000000000000000000000000000000000000000000
bb9999bb000000000055555555555550eeeeeeee0077777007777770000000000000000000000000000000000000000000000000000000000000000000000000
b099990b0000000000000555555555500ee1e1e00777776000777770000000000000000000000000000000000000000000000000000000000000000000000000
00bbbb0000000000000005555555550001eeee000071710000071700000000000000000000000000000000000000000000000000000000000000000000000000
0bb00bb000000000000555500005550000e00e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8484000000000000000000b400000000000064646400000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000084848484000000000064646464
84846400000000000000b4b400000000000000646400000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000848484848484000000000064646464
646464640000000000b4b40000000000000000646464000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000b4b4b4b4b4b400000084848484848484000000000064646464
646464640000000000b4000000000000000000006464640000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000b4b4b4b400000000b400000000848484848400000000000064646464
646464640000000000b4000000000000000000000064646400000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000b4b4b4000000000000000000000000008484848400000000000000646464
646464000000000000b4000000000000000000000000646464000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000b4b4b40000000000000000000000000000000084840000000000000000646464
646400000000000000b4000000000000000000000000006464640000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000b4b4b400000000000000000084840000000000000000840000000000000000646464
64a4a4000000000000b4b40000000000000000000000000064646464000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000006400000000000000000000b40000000000000084848484840000000000000000000000000000000000006464
64a4a400000000000000b4b400000000000000000000000000646464640000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000006400000000000000000000b4000000000000008484848484840000000000b400000000000000000000006464
a4a4000000000000000000b4b4000000000000000000000000006464646464000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000006464000000000000000000b4000000000000848484848484848400000000b4b4000000000000000000646464
a40000000000000000000000b4000000000000000000000000000000646464646400000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000064640000000000000000b400000000008484848484848484848400000000b4000000000000000064646464
a40000000000000000000000b4b40000000000000000000000000000000064646464646464000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000646400000000000000b400000000008484848484848484840000000000b4000000000000000064646464
a4000000000000000000000000b40000000000000000000000000000000000006464646464646400000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000006464640000000000b400000000848484848484848484000000000000b4000000000000000064646464
a4000000000000000000000000b40000000000000000000000000000000000000000646464646464640000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000646400000000b40000000084848484848484000000000000000000000000000000000064646464
a4000000000000000000000000b40000000000000000000000000000000000000000000000646464646464000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000064640000b4b40000008484848484840000000000000000000000000000000000000064646464
a4840000000000000000000000000000000000000000000000000000000000000000000000000064646464646400000000000000000000000000000000000000
000000000000000000000000000000000000000000000000b4b4747474b4b4000000000000000000000000000000000000000000000000000000006464646464
a4840000000000000000000000000000000000000000000000000000000000000000000000000000006464646464000000000000000000000000000000000000
000000000000000000000000000000000000000000000000b4000064646400000000000000000000000000000000000000000000000000000000646464646464
a484840000000000000000000000000000000000000000000000000000000000000000000000000000000064646464000000000000000000000000b4b4b4b4b4
0000000000000000000000000000000000000000000000b4b4000000646400000000000000000000000000000000000000000000000000000064646464646464
a4848400000000000000000000000000000000000000000000000000000000000000000000000000000000000064646400000000000000000000b4b4000000b4
b4b4b4b4b4000000000000000000000000000000000000b400000000006400000000000000000000000000000000000000000000000000006464646464646464
a484840000000000000000000000000000000000000000000000b4b4b40000000000000000000000000000000000006464640000b40000b4b4b4b40000000000
00000000b4b4b4b4b4b4b4b4b4b4b400000000000000b4b400000000006464000000000000000000000000000000000000000000000064646464646464646464
a4848484000000000000000000000000000000000000000000000000b4b4b4000000000000000000000000000000000064646400b4b4b4b40000000000000000
0000000000000000000000000000b4b4b400000000b4b40000000000006464000000000000000000000000000000000000000064646464646464646464646464
a48484848400000000000000000000000000000000000000000000000000b4b4000000b4b4b4b4b4000000000000000000646464746400000000000000000000
00003232323232323200000000000000b4b4b4b4b4b4000000000000000064640000000000000000000000000064640000006464646464646464646464646464
a4848484840000000000000000000000000000000000000000000000000000b4000000b4000000b4b4b400000000000000006464746400000000000000000000
00003232323232323200000000000000000000000000000000000000000064646400000000000000000000006464646464646464646464646464646464646464
a4a48484848400000000000000000000000000000000000000000000000000b40000b4b40032320000b4b4b40000000000000064746464000000000000000000
00003232323232323200000000000000000000000000000000000000000064646400000000000000000000006464646464646464646464646464646464646464
a4a484848484840000000000000000000000000000000000b4b40000000000b4b4b4b40000323200000000b40000000000000000746464640000000000000000
00000000000000000000000000000000000000000000000000000000000000646400000000000000006464646464646464646464646464646464646464006464
a4a4a4a4a48484000000000000000000000000000000000000b4b4b4b4b4b4b40000000000000000000000b40000000000000000b40000640000000000000000
00000000000000000000000000000000000000000000000000000000000000646400000000000000006464646464646464646464646464646464646464000064
a4a4a4a4a4a484848400000000000000000000000000000000000000000000000000000000000000000000b4000000000000b4b4b40000000000000000000000
00000000000000000000000000000000000000000000000000000000000064646464000000000000646464646464646464646464646464646464646464000000
a4a4a4a4a4a484848484848400000000000000000000000000000000000000000000000000000000000000b4b4b4b4b4b4b4b400000000000000000000000000
00000000000000000000000000000000000000000000000064000000006464646464640064000064646464646464646464646464646464646464646400000000
a4a4a4a4a48484848484848484000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000064640000006464646464646464646464646464646464646464646464646464646464640000000000
a4a4a4a4a48484848484848484840000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000646400646464646464646464646464646464646464646464646464646464646400000000000000
a4a4a4a4a4a484848484848484848484848400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000064646400000064646464646464646464646464646464646464646464646464646464646464000000000000000000
a4a4a4a4a4a4a4a4a4a4a4a4a4848484848484000000000000008484848484848484848484848484848484840000000000000000000000000000000064646464
64640000000000000064646464646464646464646464646464646464646464646464646464646464646464646464646464646464646400000000000000000000
__map__
4848484848484848484848484848484848484848484848484848484848484646464a4a4a4a4a4a4a4a4a4a4a4a4a4a000000000000000000000000000000000000484848484848484848484848484a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a
484848484848484848484848484848484848484848480000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004a4a4a4a4a4a00000000000000000000000000000000000000000000004a4a
4848484848484848484848484848000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004a4a
4848484848484848484848480000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004a4a
484848484848484848480000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004a
484848484848484800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004a
4848484848480000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004a4a
4848484848000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004a4a
484848484800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004a
484848480000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004a
484848480000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004a
484848480000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004a
484848480000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004a
484848480000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004a
484848000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004a
484848000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004a
484848000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004a
484848000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004a
484848000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004a
484848000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004a
484848000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004a
484848000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004a
484848000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004a
4848480000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4848480000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4848480000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048
4848000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048
4848000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048
4848000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4848000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4848000000000000000000004b4b4b4b4b474747474b4b4b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000046
48480000000000000000004b4b00000000004646000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004800000000000000464646
__lua__
--src/char.lua
function init_char()
    local char={
        x=72,
        y=192,
        dx=0,
        dy=0,
        runspeed=1,
        spr=004,
        spri=1,
        state='stand',
        flip=false,
        states={
            ['stand']={
                ['walk']=1,
            },
            ['walk']={
                ['stand']=1,
            }
        },
        animations={
            ['stand']={004},
            ['walk']={004,004,020,020},
        },
        change_state=change_state,
        get_input=get_input,
        update=update_char,
        menu=function(self)
            -- bring up pause / item menu
            game_state = 'menu'
        end,
        action=function(self)
            -- talk / read
            game_state = 'menu'
        end,

        draw=function(self)
            spr(self.spr,self.x,self.y,1,1,self.flip)
        end
    }
    return char
end

function change_state(_char, next_state)
    if (_char.states[_char.state][next_state] ~= nil) then
        _char.state = next_state
        _char.spri = 1
    end
end

function get_input(_char)
    if (btn(0) and not(btn(1)) and not(btn(2)) and not(btn(3))) then
        _char.dx = -char.runspeed
        _char:change_state('walk')
        _char.flip = true
    elseif (btn(1) and not(btn(0)) and not(btn(2)) and not(btn(3)) ) then
        _char.dx = char.runspeed
        _char:change_state('walk')
        _char.flip = false
    elseif (btn(2) and not(btn(1)) and not(btn(0)) and not(btn(3))) then
        _char.dy = -char.runspeed
        _char:change_state('walk')
    elseif (btn(3) and not(btn(1)) and not(btn(2)) and not(btn(0))) then
        _char.dy = char.runspeed
        _char:change_state('walk')
    end

    if (btn(0) == btn(1)) then
        _char.dx = 0 
    end

    if (btn(2) == btn(3)) then
        _char.dy = 0 
    end 

    if (_char.dx == 0 and _char.dy == 0) then
        _char:change_state('stand')
    end

    if (btnp(5)) then
        _char:menu()
    end

    if (btnp(4)) then
        _char:action()
    end
end

function update_char(_char)
    if (_char.pause) then
        return
    end

    _char:get_input()

    _char.y += _char.dy
    _char.x += _char.dx

    -- animation
    if (t % 4 == 0) then
        _char.spri = ((_char.spri + 1) % #_char.animations[_char.state]) + 1
    end

    _char.spr = _char.animations[_char.state][_char.spri]
end
-->8
--src/inventory.lua
inventory = {
    -- 4x8 grid
    items = {
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {}
    }
}
-->8
--src/items.lua
items = {}

items.crab = {
    spr = 006,
    name = 'crab'
}

items.log = {
    spr = 019,
    name = 'log'
}

inventory.items[2][3] = items.log
inventory.items[4][5] = items.crab
inventory.items[4][6] = items.crab

-->8
--src/lib/dust.lua
function add_new_dust(_x,_y,_dx,_dy,_l,_s,_g,_f)
    add(dust, {
    fade=_f,x=_x,y=_y,dx=_dx,dy=_dy,life=_l,orig_life=_l,rad=_s,col=8,grav=_g,draw=function(self)
    pal()palt()circfill(self.x * 8,self.y * 8,self.rad,self.col)
    end,update=function(self)
    self.x+=self.dx self.y+=self.dy
    self.dy+=self.grav self.rad*=0.9 self.life-=1
    if type(self.fade)=="table"then self.col=self.fade[flr(#self.fade*(self.life/self.orig_life))+1]else self.col=self.fade end
    if self.life<0then del(dust,self)end end})
end
-->8
--src/lib/group.lua
function new_group(bp)
    return {
        _={},
        bp=bp,
        
        new=function(self,p)
            for k,v in pairs(bp) do
                if v!=nil then
                    p[k]=v
                end
            end
            p.alive=true
            add(self._,p)
        end,
           
        update=function(self)
            for i,v in ipairs(self._) do
                v:update()
                if v.alive==false then
                del(self._,self._[i])
                end
            end
        end,

        turn=function(self)
            for v in all(self._) do
                v:turn()
            end
        end,
        
        draw=function(self)
            for v in all(self._) do
                spr(v.s,v.x*8,v.y*8,1,1,v.flip)
            end
        end
    }
end
-->8
--src/lib/util.lua
function rndi(min,max)
    return flr(rnd(max - min)) + min
end

function coord_match(a,b)
    return a[1] == b[1] and a[2] == b[2]
end

function in_bounds(a,b)
    return a > 0 and a < MAP_SIZE + 1 and b > 0 and b < MAP_SIZE + 1
end

function round(x)
    if ((x - flr(x)) >= 0.5) then
        return ceil(x)
    else
        return flr(x)
    end
end
-->8
--src/log.lua
_log={}
log_l=4
for i=1,log_l do
    add(_log,'')
end

function log(str)
    add(_log,str)
end
   
function debug()
    vars = {
        't='..t
    }

    -- draw the log
    for i=count(_log)-log_l+1,count(_log) do
        add(vars,'> '.._log[i])
    end

    for i,v in ipairs(vars) do
        print(v,(cam.x*8)+8,(cam.y*8)+(i*8),15)
    end
end
-->8
--src/main.lua
-- sword 

function _init()
    -- global vars
    t=0
    cam = {
        x = 0,
        y = 0
    }
    msg=''
    -- states: move, menu, talk, etc.
    -- game states change control delegates

    game_state = 'move'

    -- thanks doc_robs!
    dust={}

    char=init_char()
end

function _update()
    pal()
    t=(t+1)%128

    if (game_state == 'move') then
        char:update()
    end

    if (game_state == 'menu') then
        menu:update()
    end

    cam.x = char.x - 64
    cam.y = char.y - 64

    for d in all(dust) do
        d:update()
    end
end

function _draw()
    cls()

    map(0,0,0,0,128,64)

    camera(cam.x, cam.y)
    char:draw()

    if (game_state == 'menu') then
        menu:draw()
    end

    for d in all(dust) do
        d:draw()
    end

    -- debug()
end
-->8
--src/menu.lua
menu = {
    cursor = {
        x=1,
        y=1
    },
    selected_item = nil,

    update = function(self)

        if (btnp(0)) then
            self.cursor.x = max(self.cursor.x - 1, 1)
        end

        if (btnp(1)) then
            self.cursor.x = min(self.cursor.x + 1, 4)
        end

        if (btnp(2)) then
            self.cursor.y = max(self.cursor.y - 1, 1)
        end

        if (btnp(3)) then
            self.cursor.y = min(self.cursor.y + 1, 9)
        end 


        if (btnp(4)) then
            game_state = 'move'
        end

        self.selected_item = inventory.items[self.cursor.y][self.cursor.x]
    end,

    draw = function(self)
        -- status
        draw_menu_rect(0,0,63,63,7)
        print('- status - ', cam.x + 12, cam.y + 2, 7)


        -- inventory
        draw_menu_rect(96, 32, 127, 111, 7)

        print('-items-', cam.x + 98, cam.y + 34, 7)


        for i=1,9 do
            for j=1,4 do
                local item = inventory.items[i][j]
                if (item ~= nil) then
                    spr(item.spr, cam.x + 96 + ((j-1) * 8), cam.y + 40 + ((i-1) * 8))
                end
            end
        end

        -- cursor
        draw_menu_rect(
            ((self.cursor.x - 1) * 8) + 96,
            ((self.cursor.y - 1) * 8) + 40,
            ((self.cursor.x) * 8) + 96 - 1,
            ((self.cursor.y) * 8) + 40 - 1,
            8,
            true
        )


        -- bottom bar
        draw_menu_rect(16, 120, 111, 127, 7)

        if (self.selected_item ~= nil) then
            print(self.selected_item.name, cam.x + 48, cam.y + 122, 7)
        end

    end
}

function draw_menu_rect(x0, y0, x1, y1, color, transparent)
    if (not(transparent)) then
        rectfill(cam.x + x0, cam.y + y0, cam.x + x1, cam.y + y1, 0)
    end
    line(cam.x + x0 + 1, cam.y + y0, cam.x + x1 - 1, cam.y + y0, color)
    line(cam.x + x0, cam.y + y0 + 1, cam.x + x0, cam.y + y1 - 1, color)
    line(cam.x + x0 + 1, cam.y + y1, cam.x + x1 - 1, cam.y + y1, color)
    line(cam.x + x1, cam.y + y0 + 1, cam.x + x1, cam.y + y1 - 1, color)
end
-->8
